name: '[docker image]'

on:
  push:
    branches:
    - feat_workerFrontend
  # release:
  #   types:
  #   - published

env:
  DOCKER_REGISTRY: 'docker-registry.ebrains.eu/siibra/'

jobs:
  build-docker-img:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dockerfile: ['./http.server.dockerfile', './http.worker.dockerfile']
        include:
        - dockerfile: ./http.server.dockerfile
          dockerimg: siibra-jugex-server
        - dockerfile: ./http.worker.dockerfile
          dockerimg: siibra-jugex-worker
    steps:
    - uses: actions/checkout@v2
    - name: 'Set DOCKER_IMAGE_TAG'
      run: |
        echo "Event: $GITHUB_EVENT_NAME"

        DOCKER_IMAGE_TAG="0.1.0"

        echo "DOCKER_IMAGE_TAG: $DOCKER_IMAGE_TAG"
        echo "DOCKER_IMAGE_TAG=$DOCKER_IMAGE_TAG" >> $GITHUB_ENV

    - name: 'Build docker image'
      run: |
        DOCKER_BUILT_TAG=${{ env.DOCKER_REGISTRY }}${{ matrix.dockerimg }}:$DOCKER_IMAGE_TAG
        echo "Building $DOCKER_BUILT_TAG"
        docker build \
          -t $DOCKER_BUILT_TAG \
          -f ${{ matrix.dockerfile }} \
          .
        echo "Successfully built $DOCKER_BUILT_TAG"
        echo "DOCKER_BUILT_TAG=$DOCKER_BUILT_TAG" >> $GITHUB_ENV

    - name: 'Push to docker registry'
      run: |
        echo "Login to docker registry"
        docker login \
          -u '${{ secrets.EBRAINS_DOCKER_REG_USER }}' \
          -p '${{ secrets.EBRAINS_DOCKER_REG_TOKEN }}' \
          docker-registry.ebrains.eu
        echo "Pushing $DOCKER_BUILT_TAG"
        docker push $DOCKER_BUILT_TAG

    - name: image pull on OKD
      run: |
        if [ ! -z "${{ secrets.EBRAINS_OKD_DEV_ENDPOINT }}" ]
        then
          if [ ! -z "${{ secrets.EBRAINS_OKD_DEV_SECRET }}" ]
          then
            oc login ${{ secrets.EBRAINS_OKD_DEV_ENDPOINT }} --token=${{ secrets.EBRAINS_OKD_DEV_SECRET }}
            oc project ${{ env.EBRAINS_OKD_PROJECT }}
            oc import-image $DOCKER_BUILT_TAG
          else
            echo "secrets.EBRAINS_OKD_DEV_SECRET not set, skipping ..."
          fi
        else
          echo "secrets.EBRAINS_OKD_DEV_ENDPOINT not set, skipping..."
        fi
